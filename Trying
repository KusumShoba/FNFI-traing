using System;
using System.Collections.Generic;
using System.Linq;

public class Program
{
    public class EmptyStringArgumentException : Exception
    {
        public EmptyStringArgumentException(string message) : base(message)
        {
        }
    }

    public static (List<string>, List<string>) GetUniqueAndDuplicateWords(string input)
    {
        if (input == null)
        {
            throw new NullReferenceException("Null string argument provided.");
        }

        if (input.Trim() == "")
        {
            throw new EmptyStringArgumentException("Empty string argument provided.");
        }

        // Split input string into words
        string[] words = input.Split(new char[] { ' ', ',', '.', ';', ':', '!', '?' }, StringSplitOptions.RemoveEmptyEntries);

        // Using a dictionary to count occurrences of each word
        Dictionary<string, int> wordCount = new Dictionary<string, int>();

        foreach (string word in words)
        {
            if (wordCount.ContainsKey(word))
            {
                wordCount[word]++;
            }
            else
            {
                wordCount[word] = 1;
            }
        }

        // Separate unique and duplicate words based on count
        List<string> uniqueWords = new List<string>();
        List<string> duplicateWords = new List<string>();

        foreach (var pair in wordCount)
        {
            if (pair.Value == 1)
            {
                uniqueWords.Add(pair.Key);
            }
            else
            {
                for (int i = 0; i < pair.Value; i++)
                {
                    duplicateWords.Add(pair.Key);
                }
            }
        }

        // Sorting the lists (optional, for clarity)
        uniqueWords.Sort();
        duplicateWords.Sort();

        return (uniqueWords, duplicateWords);
    }

    public static void Main(string[] args)
    {
        try
        {
            string input = "hello world hello";
            var result = GetUniqueAndDuplicateWords(input);
            Console.WriteLine("Unique words: " + string.Join(", ", result.Item1));
            Console.WriteLine("Duplicate words: " + string.Join(", ", result.Item2));
        }
        catch (NullReferenceException e)
        {
            Console.WriteLine("Error: " + e.Message);
        }
        catch (EmptyStringArgumentException e)
        {
            Console.WriteLine("Error: " + e.Message);
        }
    }
}
