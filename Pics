namespace InsuranceApi.DTOs
{
    public class ClaimDto
    {
        public int ClaimId { get; set; }
        public int InsuredPolicyId { get; set; }
        public int PolicyHolderId { get; set; }
        public DateTime ClaimDate { get; set; }
        public decimal ClaimAmount { get; set; }
        public string ClaimStatus { get; set; } = null!;
        public decimal? DispenseAmount { get; set; }
        public string DocumentType { get; set; } = null!;
        public string DocumentPath { get; set; } = null!;
        public int HospitalId { get; set; }
    }
}



@page "/claimstatus/{policyHolderId:int}"
@using ClientApp.Services
@using InsuranceApi.DTOs

@inject IClaimDtoService ClaimService

<h3>Claim Status</h3>

@if (claims == null)
{
    <p>Loading claims...</p>
}
else if (!claims.Any())
{
    <p>No claims found for the specified policy holder.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Insurance ID</th>
                <th>Policy Holder ID</th>
                <th>Claim Date</th>
                <th>Claim Amount</th>
                <th>Claim Status</th>
                <th>Dispense Amount</th>
                <th>Dispense Type</th>
                <th>Dispense Path</th>
                <th>Hospital ID</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var claim in claims)
            {
                <tr>
                    <td>@claim.PolicyHolderId</td>
                    <td>@claim.ClaimDate.ToShortDateString()</td>
                    <td>@claim.ClaimAmount</td>
                    <td>@claim.ClaimStatus</td>
                    <td>@claim.DispenseAmount</td>
                    <td>@claim.HospitalId</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int policyHolderId { get; set; }

    private List<ClaimDto> claims;

    protected override async Task OnInitializedAsync()
    {
        claims = await ClaimService.GetClaimsByPolicyHolderIdAsync(policyHolderId);
    }
}




Error:
Microsoft.AspNetCore.Components.WebAssembly.Rendering.WebAssemblyRenderer[100]
      Unhandled exception rendering component: The JSON value could not be converted to System.Collections.Generic.List`1[InsuranceApi.DTOs.ClaimDto]. Path: $ | LineNumber: 0 | BytePositionInLine: 1.
System.Text.Json.JsonException: The JSON value could not be converted to System.Collections.Generic.List`1[InsuranceApi.DTOs.ClaimDto]. Path: $ | LineNumber: 0 | BytePositionInLine: 1.
   at System.Text.Json.ThrowHelper.ThrowJsonException_DeserializeUnableToConvertValue(Type propertyType)
   at System.Text.Json.Serialization.JsonCollectionConverter`2[[System.Collections.Generic.List`1[[InsuranceApi.DTOs.ClaimDto, SharedModels, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[InsuranceApi.DTOs.ClaimDto, SharedModels, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]].OnTryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, List`1& value)
