using System;
using System.Collections.Generic;

class WordFrequencyCounter
{
    public static Dictionary<string, int> CountWords(string text)
    {
        var wordCounts = new Dictionary<string, int>();
        foreach (var word in text.Split(' '))
        {
            if (!char.IsLetter(word[0])) continue; // Skip non-alphabet characters at the start
            var normalizedWord = word.ToLower();
            if (wordCounts.ContainsKey(normalizedWord))
                wordCounts[normalizedWord]++;
            else
                wordCounts[normalizedWord] = 1;
        }
        return wordCounts;
    }

    public static void PrintSortedFrequencies(Dictionary<string, int> wordCounts)
    {
        var sortedWords = new List<KeyValuePair<string, int>>();
        foreach (var entry in wordCounts)
        {
            sortedWords.Add(new KeyValuePair<string, int>(entry.Key, entry.Value));
        }
        sortedWords.Sort((a, b) => b.Value.CompareTo(a.Value)); // Descending order by frequency
        sortedWords.Sort((a, b) => string.Compare(b.Key, a.Key, StringComparison.Ordinal)); // Reverse alphabetical order

        foreach (var pair in sortedWords)
        {
            Console.WriteLine($"{pair.Value} {pair.Key}");
        }
    }
}

