@page "/userdashboard/{PolicyHolderId:int}"
@using ClientApp.Services
@using InsuranceApi.DTOs
@inject IPolicyHolderDtoService PolicyHolderService
@inject NavigationManager NavigateManager

<div class="profile-page">
    <header class="hero">
        <div class="hero-content">
            <h1 class="title">Welcome, @UserName!</h1>
            <p class="subtitle">Your Profile Dashboard</p>
        </div>
    </header>

    <main class="content">
        <section class="user-info">
            <div class="card">
                <h2 class="card-title">User Information</h2>
                <ul class="info-list">
                    <li><span class="icon-user"></span><strong>Name:</strong> @UserName</li>
                    <li><span class="icon-location-pin"></span><strong>Address:</strong> @Address</li>
                    <li><span class="icon-phone"></span><strong>Phone:</strong> @Phone</li>
                    <li><span class="icon-email"></span><strong>Email:</strong> @Email</li>
                    <li><span class="icon-status"></span><strong>Status:</strong> @Status</li>
                </ul>
            </div>
        </section>


        <div class="claims-section">
            <div class="dropdown-header">
                <button @onclick="() => NavigateToClaimStatus(policyHolderId)"><h3>Your Policies</h3></button>
            </div>
        </div>


        <div class="claims-section">
            <div class="dropdown-header">
                <button @onclick="() => NavigateToClaimStatus(policyHolderId)"><h3>Your Claims</h3></button>
            </div>
        </div>

    </main>


</div>




@code {
    [Parameter]
    public int policyHolderId { get; set; }
    private string UserName;
    private string Address;
    private string Phone;
    private string Email;
    private int Status;
    private List<PolicyHolderDto> Policies;

    protected override async Task OnInitializedAsync()
    {
        // Example to fetch data dynamically based on user context or session

        // Fetch the policy holder data by ID
        var policyHolder = await PolicyHolderService.GetById(policyHolderId);


        if (policyHolder != null)
        {
            // Assign the fetched data to the fields
            UserName = policyHolder.Name;
            Address = policyHolder.Address;
            Phone = policyHolder.Phone;
            Email = policyHolder.Email;
            Status = policyHolder.Status;

            // Fetch all policies for this user
            Policies = await PolicyHolderService.GetAll();
        }
    }

    private void NavigateToClaimStatus(int policyHolderId)
    {
        NavigateManager.NavigateTo($"/Claim/{policyHolderId}");//Put 8
    }
}


<div>

    <style>

        .profile-page {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            font-family: 'Poppins', sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .hero {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            width: 100%;
            padding: 50px 20px;
            text-align: center;
            border-radius: 15px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
            margin-bottom: 40px;
            position: relative;
            overflow: hidden;
        }

            .hero::before {
                content: '';
                position: absolute;
                top: -50px;
                left: -50px;
                width: 150px;
                height: 150px;
                background: rgba(255, 255, 255, 0.2);
                border-radius: 50%;
                animation: spin 10s linear infinite;
            }

        .hero-content {
            position: relative;
            z-index: 2;
        }

        .title {
            font-size: 2.5rem;
            font-weight: 700;
            margin: 0;
        }

        .subtitle {
            font-size: 1.2rem;
            font-weight: 300;
            margin-top: 10px;
            opacity: 0.9;
        }

        .content {
            display: flex;
            flex-direction: column;
            gap: 30px;
            width: 100%;
        }

        .user-info .card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            padding: 30px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .user-info .card:hover {
                transform: translateY(-10px);
                box-shadow: 0 25px 40px rgba(0, 0, 0, 0.2);
            }

        .card-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 20px;
            color: #333;
        }

        .info-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

            .info-list li {
                display: flex;
                align-items: center;
                margin-bottom: 15px;
                font-size: 1rem;
                color: #555;
            }

                .info-list li .icon-user,
                .info-list li .icon-location-pin,
                .info-list li .icon-phone,
                .info-list li .icon-email,
                .info-list li .icon-status {
                    margin-right: 10px;
                    font-size: 1.2rem;
                    color: #764ba2;
                }

        .claims-section .dropdown-header {
            background: linear-gradient(135deg, #ff7e5f 0%, #feb47b 100%);
            color: white;
            border-radius: 15px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            padding: 15px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .claims-section .dropdown-header:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 25px rgba(0, 0, 0, 0.2);
            }

        .claims-section h3 {
            margin: 0;
            font-size: 1.3rem;
            font-weight: 600;
        }

    </style>
</div>
<style>
        @keyframes spin {
    0% {
    transform: rotate(0deg);
    }
    100% {
    transform: rotate(360deg);
    }
    }
</style>
