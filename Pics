using InsuranceApi.DTOs;
using System.Net.Http;
using System.Net.Http.Json;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Text.Json;

namespace ClientApp.Services
{
    public interface IClaimDtoService
    {
        Task Add(ClaimDto employee);
        Task DeleteById(int id);
        Task<List<ClaimDto>> GetAll();
        Task<ClaimDto> GetById(int id);
        Task Update(ClaimDto employee);
        Task<ClaimDto> GetClaimsByPolicyHolderIdAsync(int policyHolderId);

        //Task<string> GetClaimsByPolicyHolderIdAsync(int policyHolderId);
    }

    public class ClaimDtoService : IClaimDtoService
    {
        private readonly HttpClient _httpClient;

        public ClaimDtoService(HttpClient httpClient)
        {
            _httpClient = httpClient;
        }

        //public async Task<string> GetClaimsByPolicyHolderIdAsync(int policyHolderId)
        //{


        //    var response = await _httpClient.GetAsync($"Claim/{policyHolderId}");
        //    var json = await response.Content.ReadAsStringAsync();

        //    return json;

        //}


        public async Task<ClaimDto> GetClaimsByPolicyHolderIdAsync(int policyHolderId)
        {
            var response = await _httpClient.GetAsync($"Claim/{policyHolderId}");
            response.EnsureSuccessStatusCode();
            var json = await response.Content.ReadAsStringAsync();
            var claimsRes = JsonSerializer.Deserialize<ClaimDto>(json, new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            });
            Console.WriteLine($"Fetched {claimsRes}");
            return claimsRes;

            
        }




        public async Task Add(ClaimDto employee)
        {
            await _httpClient.PostAsJsonAsync("Claim", employee);
        }

        public async Task DeleteById(int id)
        {
            await _httpClient.DeleteAsync($"Claim/{id}");
        }

        public async Task<List<ClaimDto>> GetAll()
        {
            return await _httpClient.GetFromJsonAsync<List<ClaimDto>>("Claim");
        }

        public async Task<ClaimDto> GetById(int id)
        {
            return await _httpClient.GetFromJsonAsync<ClaimDto>($"Claim/{id}");
        }

        public async Task Update(ClaimDto employee)
        {
            await _httpClient.PutAsJsonAsync("Claim", employee);
        }
    }
}

