using System;
using System.Collections.Generic;
using System.Linq;

public class EmptyStringException : Exception
{
    public EmptyStringException(string message) : base(message) { }
}

public class NullReferenceException : Exception
{
    public NullReferenceException(string message) : base(message) { }
}

public class WordSeparator
{
    public static void FindUniqueAndDuplicates(string input, out List<string> unique, out List<string> duplicates)
    {
        if (input == null)
        {
            throw new NullReferenceException("Input string is null.");
        }
        if (string.IsNullOrWhiteSpace(input))
        {
            throw new EmptyStringException("Input string is empty.");
        }

        var words = input.ToLower().Split(new[] { ' ', ',', '.' }, StringSplitOptions.RemoveEmptyEntries);
        var wordCount = new Dictionary<string, int>();

        foreach (var word in words)
        {
            if (wordCount.ContainsKey(word))
            {
                wordCount[word]++;
            }
            else
            {
                wordCount[word] = 1;
            }
        }

        unique = wordCount.Where(kv => kv.Value == 1).Select(kv => kv.Key).ToList();
        duplicates = wordCount.Where(kv => kv.Value > 1).Select(kv => kv.Key).ToList();
    }
}

public class Program
{
    public static void Main()
    {
        var testCases = new List<string>
        {
            "Do not call me, let me call you",
            "I had coffee at a coffee shop yesterday during coffee break",
            null,
            ""
        };

        foreach (var testCase in testCases)
        {
            try
            {
                WordSeparator.FindUniqueAndDuplicates(testCase, out List<string> unique, out List<string> duplicates);
                Console.WriteLine($"Unique: {string.Join(", ", unique)}");
                Console.WriteLine($"Duplicate: {string.Join(", ", duplicates)}");
            }
            catch (EmptyStringException ex)
            {
                Console.WriteLine($"EmptyStringException: {ex.Message}");
            }
            catch (NullReferenceException ex)
            {
                Console.WriteLine($"NullReferenceException: {ex.Message}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Exception: {ex.Message}");
            }

            Console.WriteLine();
        }
    }
}
